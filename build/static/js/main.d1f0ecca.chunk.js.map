{"version":3,"sources":["components/Header.js","components/Release.js","components/Releases.js","components/Others.js","components/Main.js","components/Footer.js","serviceWorker.js","index.js"],"names":["Header","className","href","target","rel","src","alt","React","Component","Release","props","state","release","this","linkRelease","cover","linkColor","title","linkLabel","label","cat","date","tracklist","map","track","Releases","data","Others","Main","releases","Footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d1f0ecca.chunk.js","sourcesContent":["import React from 'react';\nimport './../assets/stylesheets/css/style.css';\n\nclass Header extends React.Component{\n  render(){\n    return (\n      <header>\n        <section className=\"section-1\">\n          <h1>Alcarcia</h1>\n          <p>Co-founder of <a href=\"https://polymorphismrecords.com\" className=\"poly-red\" target=\"_blank\" rel=\"noopener noreferrer\">Polymorphism Records</a>, currently based in Madrid.</p>\n          <a href=\"https://polymorphismrecords.com\" className=\"chip-pm-link\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src={process.env.PUBLIC_URL + '/img/chip-pm.png'} alt=\"Polymorphism Records - Microchip - Website\"></img>\n          </a>\n        </section>\n        <section className=\"section-2\">\n          <h2 className=\"releases-title\">Releases</h2>\n          <label className=\"contact\">For any enquiry:\n            <a href=\"mailto:alcarcia@gmx.com\" className=\"alca-yellow\">alcarciamusic@gmail.com</a>\n          </label>\n        </section>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\n\nconst RELEASES_FOLDER = '/img/';\n\nclass Release extends React.Component{\n\n   constructor(props) {\n        super(props);\n        this.state = {\n            release: this.props.release\n        }\n    }\n\n    render () {\n        return (\n            <div className=\"release\">\n                <a href={this.state.release.linkRelease} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img src={process.env.PUBLIC_URL + RELEASES_FOLDER + this.state.release.cover} alt=\"BoSsOb cover\"></img>\n                </a>\n                <div className=\"release-txt\">\n                    <a href={this.state.release.linkRelease} className={this.state.release.linkColor} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <h3 className=\"release-title\">{this.state.release.title}</h3>\n                    </a>\n                    <a href={this.state.release.linkLabel} className={this.state.release.linkColor} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <h4 className=\"label\">{this.state.release.label}</h4>\n                    </a>\n                    <h5 className=\"cat\">{this.state.release.cat}</h5>\n                    <h6 className=\"date\">{this.state.release.date}</h6>\n                    <ul className=\"tracklist\">\n                        {this.state.release.tracklist.map(track => {\n                            return (<li>{track.title}</li>)\n                        })}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Release;","import React from 'react';\nimport data from './../data/data.json';\nimport Release from './Release';\n\nclass Releases extends React.Component{\n\n    render () {\n        return data.map(release => {\n            return(\n                <Release release={release}/>\n            )\n        })\n    }\n}\n\nexport default Releases;","import React from 'react';\nimport './../assets/stylesheets/css/style.css';\n\nclass Others extends React.Component{\n  render(){\n    return (\n        <section className=\"release others\">\n          <h4 className=\"others-title\">OTHERS</h4>\n          <ul className=\"others-list\">\n            <li className=\"other\"><a href=\"https://soundcloud.com/alcarcia/sets/mixes\" target=\"_blank\">Mixes</a></li>\n            <li className=\"other\"><a href=\"https://unsolvedlabel.bandcamp.com/track/fluotexin-original-mix\" target=\"_blank\">Fluotexin (Original Mix)</a></li>\n          </ul>\n        </section>\n    );\n  }\n}\n\nexport default Others;\n","import React from 'react';\nimport Releases from './Releases';\nimport Others from './Others';\nimport './../assets/stylesheets/css/style.css';\n\nclass Main extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      releases: []\n    }\n  }\n\n  render (){    \n    return (\n      <main>\n  \n        <Releases/>\n\n        <Others/>\n  \n      </main>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport './../assets/stylesheets/css/style.css';\n\nclass Footer extends React.Component{\n  render(){\n    return (\n      <footer>\n          <section className=\"support\">\n              <label>Pick ALCATAPE01 (Cassette) and support <a className=\"precious-plastic\" href=\"https://preciousplastic.com/\">Precious Plastic</a>.</label>\n          </section>\n          <section className=\"rrss\">\n            <ul className=\"rrss-list\">\n              <li className=\"rs\"><a className=\"dg\" href=\"https://www.discogs.com/artist/6426813-Alcarcia\" target=\"_blank\">Discogs</a></li>\n              <li className=\"rs\"><a className=\"bc\" href=\"https://alcarcia.bandcamp.com/releases\" target=\"_blank\">Bandcamp</a></li>\n              <li className=\"rs\"><a className=\"sc\" href=\"https://soundcloud.com/alcarcia\" target=\"_blank\">Soundcloud</a></li>\n              <li className=\"rs\"><a className=\"fb\" href=\"https://www.facebook.com/alcarcia/\" target=\"_blank\">Facebook</a></li>\n              <li className=\"rs\"><a className=\"ig\" href=\"https://www.instagram.com/alcarcia/\" target=\"_blank\">Instagram</a></li>\n            </ul>\n          </section>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <Main />\n    <Footer />\n  </React.StrictMode>,\n  document.getElementById('alcarcia')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}